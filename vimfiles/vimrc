"call `vim -u NONE` to run it fresh
"call `ctags(.exe) -R`
"jump into tag <C-]>, back <C-t>
"for sort and pass uniq strings call `:sort u`
set nocompatible "must be first line
set background=light
filetype plugin indent on "Automatically detect file types
try
  colorscheme PaperColor
endtry

let g:NERDTreeDirArrowCollapsible = '▾'
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeQuitOnOpen = 1
let g:NERDTreeShowHidden = 1
let g:NERDTreeWinSize = 60
let g:loaded_netrw = 1
let g:loaded_netrwPlugin = 1
let g:netrw_loaded_netrwPlugin= 1
let mapleader="\<Space>"

function WinToLin() "convert line ends
  update
  e ++ff=dos
  setlocal ff=unix
  set fileencoding=utf8
  set nobomb
endfunction

nnoremap <Leader>b :ls<CR>
nnoremap <Leader>l :call WinToLin()<CR>
nnoremap <Leader>n :NERDTreeToggle<CR>
nnoremap <Leader>p :%!python -m json.tool<CR>
nnoremap <Leader>q :bd<CR>
nnoremap <Leader>qq :bd!<CR>
nnoremap <S-Tab> :bprevious<CR>
nnoremap <Tab> :bnext<CR>

if !has('nvim')
  if has('win32') || has('win64')
    set renderoptions=type:directx
  else
    set term=$TERM "Make arrow and other keys work
  endif
endif
if &term == 'xterm' || &term == 'screen'
  set t_Co=256 "Enable 256 colors to stop the CSApprox warning and make xterm vim shine
endif
if has('clipboard')
  set clipboard=unnamed "On mac and Windows, use * register for copy-paste
  if has('unnamedplus') "When possible use + register for copy-paste
    set clipboard+=unnamedplus
  endif
endif
if has('statusline')
  set laststatus=2
  set statusline=%<%f\ %h%m%r%=%{\"[\".(&fenc==\"\"?&enc:&fenc).((exists(\"+bomb\")\ &&\ &bomb)?\",B\":\"\").\"]\ \"}%k\ %-14.(%l,%c%V%)\ %P
endif
if exists('&ttyfast')
  set ttyfast
endif
if has('termguicolors')
  set notermguicolors
endif
if has('syntax')
  if &diff
    syntax off
  else
    syntax on
    syntax sync minlines=256
    set synmaxcol=256 "performance optimization
    set path+=**
  endif
endif
if v:version > 700
  set omnifunc=syntaxcomplete#Complete
endif
if has('patch-8.1.0360')
  set diffopt=internal,algorithm:patience,indent-heuristic
endif

set backspace=indent,eol,start
set encoding=utf-8
set fileencodings=utf-8,cp1251,koi8-r,cp866
set hidden
set history=5
set hlsearch
set incsearch
set lazyredraw
set linespace=0
set list
set listchars=tab:•·,trail:•,nbsp:¤,extends:»,precedes:«
set matchtime=1
set modelines=0
set mouse=nv "exclude insert mode
set nobackup
set noswapfile
set nowrap
set nowritebackup
set scrolloff=4
set shiftwidth=4
set showbreak=¬\
set showmatch
set smarttab
set softtabstop=4
set tabstop=4
set tags=tags;/
set textwidth=0
set undolevels=32
set wildignore+=*.ai,*.bmp,*.gif,*.ico,*.jpg,*.jpeg,*.png,*.psd,*.webp
set wildignore+=*.aux,*.out,*.toc
set wildignore+=*.avi,*.divx,*.mp4,*.webm,*.mov,*.m2ts,*.mkv,*.vob,*.mpg,*.mpeg
set wildignore+=*.doc,*.pdf,*.cbr,*.cbz
set wildignore+=*.eot,*.otf,*.ttf,*.woff
set wildignore+=*.mp3,*.oga,*.ogg,*.wav,*.flac
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest,*.rbc,*.class
set wildignore+=*.swp,.lock,.DS_Store,._*
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz,*.kgb
set wildignore+=.git,.hg,.svn
set wildignorecase
set wildmenu
set wildmode=list:longest,full "Command <Tab> completion, list matches, then longest common part, then all.

highlight SpecialKey ctermfg=grey guifg=grey

if has('nvim') "&& has('gui_running')
  try
    call rpcnotify(0, 'Gui', 'WindowMaximized', 1)
    if has('win32') || has('win64')
      Guifont! Hack:h10:cRUSSIAN:qDRAFT
    else
      Guifont! Hack:h12:cRUSSIAN:qDRAFT
    endif
  catch /.*/
    "echo "Ignore error: " . v:exception
  endtry
else
  if has('gui')
    set columns=999
    set guicursor=a:blinkon0,a:ver100-iCursor
    set guioptions=egmrLt
    set lines=99
    highlight iCursor guifg=#ffffff guibg=#000000
    if has('win32') || has('win64')
      set guifont=Hack:h10:cRUSSIAN:qDRAFT
    else
      set guifont=Hack\ 12
    endif
  else
    highlight Cursor guifg=#ffffff guibg=#000000
  endif
endif
