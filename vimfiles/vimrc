filetype plugin indent on

" let g:syntax_on = 1 "see `:h g:syntax_on`
let g:ctrlp_map = ""
let g:ctrlp_match_current_file = 1
let g:ctrlp_match_window = "bottom,order:btt,min:1,max:10,results:0"
let g:lsc_auto_completeopt = v:false
let g:lsc_reference_highlights = v:false
let g:mapleader = "\<Space>"
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:skip_defaults_vim = 1
let g:PaperColor_Theme_Options = {
\  'theme': {
\    'default': {
\      'transparent_background': 1
\    }
\  }
\}
let g:lsc_auto_map = {
\  'defaults': v:true,
\  'GoToDefinition': '<Leader>]',
\  'FindReferences': '<Leader>[',
\}
let g:lsc_server_commands = {
\  "go": {
\    "log_level": -1,
\    "command": "gopls serve",
\    "suppress_stderr": v:true,
\  },
\  "python": {
\    "log_level": -1,
\    "command": "pyls",
\    "suppress_stderr": v:true,
\  },
\}

nnoremap <Leader> <NOP>
nnoremap <Leader>t <C-o>
nnoremap q: <NOP>|                     " disable noise features
nnoremap q? <NOP>
nnoremap qq <NOP>
noremap <Leader>Q :%bdelete!<CR>|      " force close all
noremap <Leader>b :CtrlPBuffer<CR>|    " <C-f> switch mode
noremap <Leader>e :Explore<CR>
noremap <Leader>l :LSClientAllDiagnostics<CR>
noremap <Leader>q :bdelete<CR>
noremap <Leader>r :LSClientRestartServer<CR>
noremap <Tab> :wincmd w<CR>

autocmd BufEnter * if bufname("#") =~# "^NERD_tree_" && winnr("$") > 1 | b# | endif "readonly NERDTree buffer

if !has("nvim")
  set term=$TERM " Make arrow and other keys work
endif
if has("clipboard")
  set clipboard^=unnamed " On mac and Windows, use * register for copy-paste
  if has("unnamedplus")  " When possible use + register for copy-paste
    set clipboard^=unnamedplus
  endif
endif
if exists("g:syntax_on")
  syntax off

  highlight lscDiagnosticError   ctermfg=darkred
  highlight lscDiagnosticWarning ctermfg=darkblue
  highlight lscDiagnosticInfo    ctermfg=darkgreen
  highlight lscDiagnosticHint    ctermfg=darkgreen

  highlight Visual   ctermfg=white ctermbg=darkgray guifg=white guibg=darkgray
  highlight Search   ctermfg=white ctermbg=darkgray guifg=white guibg=darkgray
  highlight PmenuSel ctermfg=white ctermbg=darkgray guifg=white guibg=darkgray
else
  syntax enable
endif

colorscheme PaperColor
set background=light
set backspace=indent,eol,start
set belloff=all
set completeopt=menu,menuone,noinsert,noselect
set encoding=utf-8
set fileencodings=utf-8,cp1251,koi8-r,cp866
set fileformats=unix
set hidden
set history=5
set hlsearch
set ignorecase
set incsearch
set laststatus=0 " disable fancy statusline
set lazyredraw
set linebreak
set linespace=0
set list
set listchars=tab:•·,trail:•,nbsp:¤,extends:¦,precedes:¦
set matchtime=1
set mouse=a
set nobackup
set noerrorbells
set nofoldenable
set noswapfile
set notitle
set nowrap
set nowritebackup
set ruler " enable oldschool statusline
set shortmess=aIF
set showbreak=¬
set showmatch
set smartcase
set splitbelow
set splitright
set t_Co=256 " enable 256 colors to stop the CSApprox warning and make xterm vim shine
set ttimeout
set ttimeoutlen=50
set ttyfast
set undolevels=8
set viminfo=""
set visualbell
set wildignorecase
set wildmode=list:longest,full
